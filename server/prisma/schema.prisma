// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String     @id
  email             String     @unique
  name              String     @unique
  password          String
  dayStreak           Int     @default(0)
  isFreeCaseAvailable Boolean @default(false)
  isDayStreakActive  Boolean  @default(false)
  minutesCounter      Int     @default(0)
  hashedRT          String?
  confirmationCode  String?
  balance           Decimal    @default(0) @db.Decimal(9,3)
  wallet            String?
  profit_multiplier Float      @default(1)
  isEmailConfirmed  Boolean    @default(false)
  profile_image     String?
  user_items        UserItem[]
  user_cases        UserCase[]
}

model Case {
  id          Int        @id @default(autoincrement())
  name        String
  description String?
  image       String?
  price       Float
  user_cases  UserCase[]
  CaseItem    CaseItem[]
}

model CaseItem {
  id        Int   @id @default(autoincrement())
  case      Case  @relation(fields: [caseId], references: [id])
  caseId    Int
  item      Item  @relation(fields: [itemId], references: [id])
  itemId    Int
  drop_rate Float
}

model Item {
  id          Int        @id @default(autoincrement())
  name        String
  image       String?
  price       Float
  user_items  UserItem[]
  CaseItem    CaseItem[]
}

model UserItem {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  item      Item     @relation(fields: [itemId], references: [id])
  itemId    Int
  isSold     Boolean  @default(false)
  isObtained Boolean @default(false)
  timestamp DateTime @default(now())
}

model UserCase {
  id     Int    @id @default(autoincrement())
  user   User   @relation(fields: [userId], references: [id])
  userId String
  case   Case   @relation(fields: [caseId], references: [id])
  caseId Int
}

model PasswordReset {
  id         Int      @id @default(autoincrement())
  email      String
  token      String
  created_at DateTime @default(now())
}
